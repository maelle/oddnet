% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/laplacian_eigenvalue_method.R
\name{lad}
\alias{lad}
\title{Laplacian Eigen Value method by Shenyang Huang, Yasmeen Hitti, Guillaume Rabusseau
and Reihaneh Rabbany from their KDD'20 paper Laplacian Change Point Detection for Dynamic Graphs}
\usage{
lad(matlist, k = NULL, short_win, long_win, alpha = 0.05, from_file = NULL)
}
\arguments{
\item{matlist}{The matrix list, where each matrix is an adjacency matrix of the graph.}

\item{k}{The number of eigen values to connsider}

\item{short_win}{The length of the shorter windows}

\item{long_win}{The length of the longer windows}

\item{alpha}{The threshold to declare anomalies}

\item{from_file}{This is an additional parameter only if a file needs to be read}
}
\description{
Laplacian Eigen Value method by Shenyang Huang, Yasmeen Hitti, Guillaume Rabusseau
and Reihaneh Rabbany from their KDD'20 paper Laplacian Change Point Detection for Dynamic Graphs
}
\examples{
\dontrun{
library(tnet)
library(lubridate)
data(tnet)
dat <- tnet::OnlineSocialNetwork.n1899.lnet
dat$t <-  as_datetime(dat$t)
dat$date <- as_date(dat$t)
length(which(dat$i == dat$j))
rminds <- which(dat$i == dat$j)
dat2 <- dat[-rminds, ]
dat3 <- dat2[ ,c("i", "j", "date")]
len <-  length(unique(dat3$date))
unique_dates <- unique(dat3$date)
num_networks <- length(unique_dates)
vset <- unique(sort(c(dat3[ ,1], dat3[ ,2])))
matlist <- list()
for(i in 1:20){
  nn <- unique_dates[i]
  inds <- which( dat3$date == nn )
  datwin <- dat3[inds, 1:2]
  gr <- graph_from_data_frame(datwin, vertices = vset)
  admat <- as_adjacency_matrix(gr)
  matlist[[i]] <- admat
}
ladobj <- lad(matlist, k = 6,  short_win = 7, long_win = 14)
}

}
\references{
Huang, S., Hitti, Y., Rabusseau, G., & Rabbany, R. (2020). Laplacian Change
Point Detection for Dynamic Graphs. Proceedings of the ACM SIGKDD International Conference
on Knowledge Discovery and Data Mining, 349â€“358. https://doi.org/10.1145/3394486.3403077
}
