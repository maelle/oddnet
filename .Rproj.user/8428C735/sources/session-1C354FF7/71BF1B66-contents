compute_features <- function(gr, color = FALSE){
  # gr is an igraph object
  # triangles, degree and edges
  triangles <- mean(count_triangles(gr))
  degobj <- degree(gr)
  deg <- mean(degobj)
  edges <- gsize(gr)
  num_nodes <- length(degobj)
  # clustering coefficient
  clust_coeff <- transitivity(gr)

  # assortativity
  if(color){
    vert_attr <- names(vertex_attr(gr))
    assortativity <-  assortativity.nominal(gr, types = c(1,2)[as.factor(vertex_attr(gr, vert_attr))])
  }else{
    assortativity <- assortativity_degree(gr)
  }
  # distance and isolates and connectivity
  mean_dist <- mean_distance(gr)
  diam <- diameter(gr)
  isolates <- sum(degobj == 0)/length(degobj)  # isolated nodes percentage
  conectivity <- cohesion(gr)
  # efficiency
  efficiency <- global_efficiency(gr)
  # number of clusters and cluster size
  clust <- igraph::clusters(gr)
  num_clust <- clust$no
  clust_size <- mean(clust$csize)
  # centrality measures
  closeness <- mean(closeness(gr), na.rm = TRUE)
  between <- mean(betweenness(gr), na.rm = TRUE)
  pagerank <- mean(page_rank(gr)$vector)
  cores <- mean(coreness(gr))
  structure(list(
            num_nodes = num_nodes,
            triangles = triangles,
            degree = deg,
            edges = edges,
            clustering_coef = clust_coeff,
            assortativity = assortativity,
            mean_distance = mean_dist,
            diameter = diam,
            isolates = isolates,
            conectivity = conectivity,
            efficiency = efficiency,
            num_clusters = num_clust,
            cluster_size = clust_size,
            closeness = closeness,
            betweenness = between,
            pagerank = pagerank,
            cores = cores,
            call = match.call()),
            class='networkfeatures')
}



compute_features_2 <- function(gr, color = FALSE){
  # gr is an igraph object
  # triangles, degree and edges
  triangles <- sum(count_triangles(gr))
  degobj <- degree(gr)
  deg <- sum(degobj)
  edges <- gsize(gr)
  num_nodes <- length(degobj)
  # clustering coefficient
  clust_coeff <- transitivity(gr)

  # assortativity
  if(color){
    vert_attr <- names(vertex_attr(gr))
    assortativity <-  assortativity.nominal(gr, types = c(1,2)[as.factor(vertex_attr(gr, vert_attr))])
  }else{
    assortativity <- assortativity_degree(gr)
  }
  # distance and isolates and connectivity
  mean_dist <- mean_distance(gr)
  diam <- diameter(gr)
  isolates <- sum(degobj == 0)  # isolated nodes sum
  conectivity <- cohesion(gr)
  # efficiency
  efficiency <- global_efficiency(gr)
  # number of clusters and cluster size
  clust <- igraph::clusters(gr)
  num_clust <- clust$no
  clust_size <- mean(clust$csize)
  # centrality measures
  closeness <- mean(closeness(gr), na.rm = TRUE)
  between <- mean(betweenness(gr), na.rm = TRUE)
  pagerank <- mean(page_rank(gr)$vector)
  cores <- mean(coreness(gr))
  structure(list(
    num_nodes = num_nodes,
    triangles = triangles,
    degree = deg,
    edges = edges,
    clustering_coef = clust_coeff,
    assortativity = assortativity,
    mean_distance = mean_dist,
    diameter = diam,
    isolates = isolates,
    conectivity = conectivity,
    efficiency = efficiency,
    num_clusters = num_clust,
    cluster_size = clust_size,
    closeness = closeness,
    betweenness = between,
    pagerank = pagerank,
    cores = cores,
    call = match.call()),
    class='networkfeatures')
}


compute_features_3 <- function(gr, color = FALSE, attr = NULL){
  # gr is an igraph object
  # triangles, degree and edges

  triangles <- igraph::count_triangles(gr)
  triangles_50 <- median(triangles)
  triangles_95 <- quantile(triangles, probs = 0.95)
  degobj <- igraph::degree(gr)
  degree_50 <- median(degobj)
  degree_95 <- quantile(degobj, probs = 0.95)
  edges <- igraph::gsize(gr)
  num_nodes <- length(degobj)
  # clustering coefficient
  clust_coeff <- igraph::transitivity(gr)

  # assortativity
  if(color){
    vert_attr <- names(igraph::vertex_attr(gr))
    if(length(vert_attr) > 1){
      if(is.null(attr)){
        stop("Too many vertex attributes. Specify attribute using parameter attr for feature computations.")
      }else{
        vert_attr <- attr
      }
    }
    len <- length(unique(igraph::vertex_attr(gr, vert_attr)))
    assortativity <-  igraph::assortativity.nominal(gr, types = c(1:len)[as.factor(igraph::vertex_attr(gr, vert_attr))])
  }else{
    assortativity <- igraph::assortativity_degree(gr)
  }
  # distance and isolates and connectivity
  mean_dist <- igraph::mean_distance(gr)
  diam <- igraph::diameter(gr)
  isolates <- sum(degobj == 0)/length(degobj)  # isolated nodes percentage
  conectivity <- igraph::cohesion(gr)
  # efficiency
  efficiency <- igraph::global_efficiency(gr)
  # number of clusters and cluster size
  clust <- igraph::clusters(gr)
  num_clust <- clust$no
  clust_obj <- clust$csize
  clust_size_50 <- median(clust_obj)
  clust_size_95 <- quantile(clust_obj, probs = 0.95)
  # centrality measures
  close_obj <- igraph::closeness(gr)
  closeness_50 <- median(close_obj, na.rm = TRUE)
  closeness_95 <- quantile(close_obj, na.rm = TRUE, probs = 0.95)
  between_obj <- igraph::betweenness(gr)
  between_50 <- median(between_obj, na.rm = TRUE)
  between_95 <- quantile(between_obj, na.rm = TRUE, probs = 0.95)
  pagerank_obj <- igraph::page_rank(gr)$vector
  pagerank_50 <- median(pagerank_obj)
  pagerank_95 <- quantile(pagerank_obj, probs = 0.95)
  cores_obj <- igraph::coreness(gr)
  cores_50 <- median(cores_obj)
  cores_95 <- quantile(cores_obj, probs = 0.95)
  structure(list(
    num_nodes = num_nodes,
    triangles_50 = triangles_50,
    triangles_95 = triangles_95,
    degree_50 = degree_50,
    degree_95 = degree_95,
    edges = edges,
    clustering_coef = clust_coeff,
    assortativity = assortativity,
    mean_distance = mean_dist,
    diameter = diam,
    isolates = isolates,
    conectivity = conectivity,
    efficiency = efficiency,
    num_clusters = num_clust,
    cluster_size_50 = clust_size_50,
    cluster_size_95 = clust_size_95,
    closeness_50 = closeness_50,
    closeness_95 = closeness_95,
    betweenness_50 = between_50,
    betweenness_95 = between_95,
    pagerank_50 = pagerank_50,
    pagerank_95 = pagerank_95,
    cores_50 = cores_50,
    cores_95 = cores_95,
    call = match.call()),
    class='networkfeatures')
}



compute_features_4 <- function(gr, color = FALSE, attr = NULL){
  # gr is an igraph object
  # triangles, degree and edges

  triangles <- igraph::count_triangles(gr)
  triangles_50 <- median(triangles)
  triangles_95 <- quantile(triangles, probs = 0.95)
  degobj <- igraph::degree(gr)
  degree_50 <- median(degobj)
  degree_95 <- quantile(degobj, probs = 0.95)
  edges <- igraph::gsize(gr)
  num_nodes <- length(degobj)
  # clustering coefficient
  clust_coeff <- igraph::transitivity(gr)

  # assortativity
  if(color){
    vert_attr <- names(igraph::vertex_attr(gr))
    if(length(vert_attr) > 1){
      if(is.null(attr)){
        stop("Too many vertex attributes. Specify attribute using parameter attr for feature computations.")
      }else{
        vert_attr <- attr
      }
    }
    assortativity <-  igraph::assortativity.nominal(gr, types = c(1,2)[as.factor(igraph::vertex_attr(gr, vert_attr))])
  }else{
    assortativity <- igraph::assortativity_degree(gr)
  }
  # distance and isolates and connectivity
  mean_dist <- igraph::mean_distance(gr)
  diam <- igraph::diameter(gr)
  isolates <- sum(degobj == 0)/length(degobj)  # isolated nodes percentage
  conectivity <- igraph::cohesion(gr)
  # efficiency
  efficiency <- igraph::global_efficiency(gr)
  # number of clusters and cluster size
  clust <- igraph::clusters(gr)
  num_clust <- clust$no
  clust_obj <- clust$csize
  clust_size_50 <- median(clust_obj)
  clust_size_95 <- quantile(clust_obj, probs = 0.95)
  # centrality measures
  close_obj <- igraph::closeness(gr)
  closeness_50 <- median(close_obj, na.rm = TRUE)
  closeness_95 <- quantile(close_obj, na.rm = TRUE, probs = 0.95)
  between_obj <- igraph::betweenness(gr)
  between_50 <- median(between_obj, na.rm = TRUE)
  between_95 <- quantile(between_obj, na.rm = TRUE, probs = 0.95)
  pagerank_obj <- igraph::page_rank(gr)$vector
  pagerank_50 <- median(pagerank_obj)
  pagerank_95 <- quantile(pagerank_obj, probs = 0.95)
  cores_obj <- igraph::coreness(gr)
  cores_50 <- median(cores_obj)
  cores_95 <- quantile(cores_obj, probs = 0.95)
  structure(list(
    num_nodes = num_nodes,
    triangles_95 = triangles_95,
    degree_95 = degree_95,
    edges = edges,
    clustering_coef = clust_coeff,
    assortativity = assortativity,
    mean_distance = mean_dist,
    diameter = diam,
    isolates = isolates,
    conectivity = conectivity,
    efficiency = efficiency,
    num_clusters = num_clust,
    cluster_size_95 = clust_size_95,
    closeness_95 = closeness_95,
    betweenness_95 = between_95,
    pagerank_95 = pagerank_95,
    cores_95 = cores_95,
    call = match.call()),
    class='networkfeatures')
}

